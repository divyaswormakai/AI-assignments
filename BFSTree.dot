digraph tree {
    "[3, 3, 0, 0]";
    "[2, 3, 1, 0]";
    "[3, 2, 1, 0]";
    "[2, 2, 1, 0]";
    "[3, 2, 0, 3]";
    "[3, 1, 1, 6]";
    "[3, 3, 0, 9]";
    "[2, 3, 1, 17]";
    "[3, 2, 1, 17]";
    "[2, 2, 1, 17]";
    "[3, 2, 0, 24]";
    "[3, 1, 1, 36]";
    "[3, 3, 0, 47]";
    "[2, 3, 1, 63]";
    "[3, 2, 1, 63]";
    "[2, 2, 1, 63]";
    "[3, 2, 0, 76]";
    "[3, 1, 1, 90]";
    "[2, 1, 1, 90]";
    "[1, 2, 1, 90]";
    "[3, 0, 1, 90]";
    "[2, 3, 0, 76]";
    "[1, 3, 1, 63]";
    "[2, 1, 1, 36]";
    "[1, 2, 1, 36]";
    "[3, 0, 1, 36]";
    "[3, 1, 0, 50]";
    "[2, 1, 1, 64]";
    "[2, 0, 1, 64]";
    "[1, 1, 1, 64]";
    "[2, 1, 0, 80]";
    "[1, 2, 0, 80]";
    "[2, 2, 0, 80]";
    "[1, 2, 1, 94]";
    "[2, 1, 1, 94]";
    "[0, 2, 1, 94]";
    "[2, 0, 1, 94]";
    "[1, 3, 0, 80]";
    "[2, 3, 0, 24]";
    "[1, 3, 1, 17]";
    "[2, 1, 1, 6]";
    "[1, 2, 1, 6]";
    "[3, 0, 1, 6]";
    "[3, 1, 0, 12]";
    "[2, 1, 1, 18]";
    "[2, 0, 1, 18]";
    "[1, 1, 1, 18]";
    "[2, 1, 0, 28]";
    "[1, 2, 0, 28]";
    "[2, 2, 0, 28]";
    "[1, 2, 1, 40]";
    "[2, 1, 1, 40]";
    "[0, 2, 1, 40]";
    "[1, 2, 0, 53]";
    "[0, 3, 0, 53]";
    "[0, 1, 1, 66]";
    "[1, 1, 0, 81]";
    "[1, 0, 1, 96]";
    "[0, 0, 1, 96]";
    "[0, 2, 0, 81]";
    "[1, 2, 0, 81]";
    "[2, 1, 0, 81]";
    "[1, 3, 0, 53]";
    "[2, 0, 1, 40]";
    "[1, 3, 0, 28]";
    "[2, 3, 0, 3]";
    "[1, 3, 1, 0]";
    "[3, 1, 1, 0]";
    "[3, 2, 0, 5]";
    "[2, 2, 1, 8]";
    "[2, 3, 0, 13]";
    "[3, 3, 0, 13]";
    "[2, 3, 1, 20]";
    "[3, 2, 1, 20]";
    "[1, 3, 1, 20]";
    "[3, 1, 1, 20]";
    "[3, 2, 0, 32]";
    "[2, 2, 1, 42]";
    "[2, 3, 0, 55]";
    "[3, 3, 0, 55]";
    "[2, 3, 1, 69]";
    "[3, 2, 1, 69]";
    "[1, 3, 1, 69]";
    "[3, 1, 1, 69]";
    "[3, 2, 0, 85]";
    "[2, 1, 1, 42]";
    "[1, 2, 1, 42]";
    "[3, 0, 1, 42]";
    "[3, 1, 0, 58]";
    "[2, 1, 1, 70]";
    "[2, 0, 1, 70]";
    "[1, 1, 1, 70]";
    "[2, 1, 0, 88]";
    "[1, 2, 0, 88]";
    "[2, 2, 0, 88]";
    "[1, 3, 0, 88]";
    "[2, 1, 1, 8]";
    "[1, 2, 1, 8]";
    "[3, 0, 1, 8]";
    "[3, 1, 0, 16]";
    "[2, 1, 1, 21]";
    "[2, 0, 1, 21]";
    "[1, 1, 1, 21]";
    "[2, 1, 0, 35]";
    "[1, 2, 0, 35]";
    "[2, 2, 0, 35]";
    "[1, 2, 1, 45]";
    "[2, 1, 1, 45]";
    "[0, 2, 1, 45]";
    "[1, 2, 0, 61]";
    "[0, 3, 0, 61]";
    "[0, 1, 1, 72]";
    "[1, 1, 0, 89]";
    "[0, 2, 0, 89]";
    "[1, 2, 0, 89]";
    "[2, 1, 0, 89]";
    "[1, 3, 0, 61]";
    "[2, 0, 1, 45]";
    "[1, 3, 0, 35]";
    "[3, 3, 0, 0]" -> "[2, 3, 1, 0]";
    "[3, 3, 0, 0]" -> "[3, 2, 1, 0]";
    "[3, 3, 0, 0]" -> "[2, 2, 1, 0]";
    "[3, 3, 0, 0]" -> "[1, 3, 1, 0]";
    "[3, 3, 0, 0]" -> "[3, 1, 1, 0]";
    "[2, 2, 1, 0]" -> "[3, 2, 0, 3]";
    "[2, 2, 1, 0]" -> "[2, 3, 0, 3]";
    "[3, 2, 0, 3]" -> "[3, 1, 1, 6]";
    "[3, 2, 0, 3]" -> "[2, 1, 1, 6]";
    "[3, 2, 0, 3]" -> "[1, 2, 1, 6]";
    "[3, 2, 0, 3]" -> "[3, 0, 1, 6]";
    "[3, 1, 1, 6]" -> "[3, 3, 0, 9]";
    "[3, 3, 0, 9]" -> "[2, 3, 1, 17]";
    "[3, 3, 0, 9]" -> "[3, 2, 1, 17]";
    "[3, 3, 0, 9]" -> "[2, 2, 1, 17]";
    "[3, 3, 0, 9]" -> "[1, 3, 1, 17]";
    "[2, 2, 1, 17]" -> "[3, 2, 0, 24]";
    "[2, 2, 1, 17]" -> "[2, 3, 0, 24]";
    "[3, 2, 0, 24]" -> "[3, 1, 1, 36]";
    "[3, 2, 0, 24]" -> "[2, 1, 1, 36]";
    "[3, 2, 0, 24]" -> "[1, 2, 1, 36]";
    "[3, 2, 0, 24]" -> "[3, 0, 1, 36]";
    "[3, 1, 1, 36]" -> "[3, 3, 0, 47]";
    "[3, 3, 0, 47]" -> "[2, 3, 1, 63]";
    "[3, 3, 0, 47]" -> "[3, 2, 1, 63]";
    "[3, 3, 0, 47]" -> "[2, 2, 1, 63]";
    "[3, 3, 0, 47]" -> "[1, 3, 1, 63]";
    "[2, 2, 1, 63]" -> "[3, 2, 0, 76]";
    "[2, 2, 1, 63]" -> "[2, 3, 0, 76]";
    "[3, 2, 0, 76]" -> "[3, 1, 1, 90]";
    "[3, 2, 0, 76]" -> "[2, 1, 1, 90]";
    "[3, 2, 0, 76]" -> "[1, 2, 1, 90]";
    "[3, 2, 0, 76]" -> "[3, 0, 1, 90]";
    "[3, 0, 1, 36]" -> "[3, 1, 0, 50]";
    "[3, 1, 0, 50]" -> "[2, 1, 1, 64]";
    "[3, 1, 0, 50]" -> "[2, 0, 1, 64]";
    "[3, 1, 0, 50]" -> "[1, 1, 1, 64]";
    "[1, 1, 1, 64]" -> "[2, 1, 0, 80]";
    "[1, 1, 1, 64]" -> "[1, 2, 0, 80]";
    "[1, 1, 1, 64]" -> "[2, 2, 0, 80]";
    "[1, 1, 1, 64]" -> "[1, 3, 0, 80]";
    "[2, 2, 0, 80]" -> "[1, 2, 1, 94]";
    "[2, 2, 0, 80]" -> "[2, 1, 1, 94]";
    "[2, 2, 0, 80]" -> "[0, 2, 1, 94]";
    "[2, 2, 0, 80]" -> "[2, 0, 1, 94]";
    "[3, 0, 1, 6]" -> "[3, 1, 0, 12]";
    "[3, 1, 0, 12]" -> "[2, 1, 1, 18]";
    "[3, 1, 0, 12]" -> "[2, 0, 1, 18]";
    "[3, 1, 0, 12]" -> "[1, 1, 1, 18]";
    "[1, 1, 1, 18]" -> "[2, 1, 0, 28]";
    "[1, 1, 1, 18]" -> "[1, 2, 0, 28]";
    "[1, 1, 1, 18]" -> "[2, 2, 0, 28]";
    "[1, 1, 1, 18]" -> "[1, 3, 0, 28]";
    "[2, 2, 0, 28]" -> "[1, 2, 1, 40]";
    "[2, 2, 0, 28]" -> "[2, 1, 1, 40]";
    "[2, 2, 0, 28]" -> "[0, 2, 1, 40]";
    "[2, 2, 0, 28]" -> "[2, 0, 1, 40]";
    "[0, 2, 1, 40]" -> "[1, 2, 0, 53]";
    "[0, 2, 1, 40]" -> "[0, 3, 0, 53]";
    "[0, 2, 1, 40]" -> "[1, 3, 0, 53]";
    "[0, 3, 0, 53]" -> "[0, 1, 1, 66]";
    "[0, 1, 1, 66]" -> "[1, 1, 0, 81]";
    "[0, 1, 1, 66]" -> "[0, 2, 0, 81]";
    "[0, 1, 1, 66]" -> "[1, 2, 0, 81]";
    "[0, 1, 1, 66]" -> "[2, 1, 0, 81]";
    "[1, 1, 0, 81]" -> "[1, 0, 1, 96]";
    "[1, 1, 0, 81]" -> "[0, 0, 1, 96]";
    "[3, 1, 1, 0]" -> "[3, 2, 0, 5]";
    "[3, 2, 0, 5]" -> "[2, 2, 1, 8]";
    "[3, 2, 0, 5]" -> "[2, 1, 1, 8]";
    "[3, 2, 0, 5]" -> "[1, 2, 1, 8]";
    "[3, 2, 0, 5]" -> "[3, 0, 1, 8]";
    "[2, 2, 1, 8]" -> "[2, 3, 0, 13]";
    "[2, 2, 1, 8]" -> "[3, 3, 0, 13]";
    "[3, 3, 0, 13]" -> "[2, 3, 1, 20]";
    "[3, 3, 0, 13]" -> "[3, 2, 1, 20]";
    "[3, 3, 0, 13]" -> "[1, 3, 1, 20]";
    "[3, 3, 0, 13]" -> "[3, 1, 1, 20]";
    "[3, 1, 1, 20]" -> "[3, 2, 0, 32]";
    "[3, 2, 0, 32]" -> "[2, 2, 1, 42]";
    "[3, 2, 0, 32]" -> "[2, 1, 1, 42]";
    "[3, 2, 0, 32]" -> "[1, 2, 1, 42]";
    "[3, 2, 0, 32]" -> "[3, 0, 1, 42]";
    "[2, 2, 1, 42]" -> "[2, 3, 0, 55]";
    "[2, 2, 1, 42]" -> "[3, 3, 0, 55]";
    "[3, 3, 0, 55]" -> "[2, 3, 1, 69]";
    "[3, 3, 0, 55]" -> "[3, 2, 1, 69]";
    "[3, 3, 0, 55]" -> "[1, 3, 1, 69]";
    "[3, 3, 0, 55]" -> "[3, 1, 1, 69]";
    "[3, 1, 1, 69]" -> "[3, 2, 0, 85]";
    "[3, 0, 1, 42]" -> "[3, 1, 0, 58]";
    "[3, 1, 0, 58]" -> "[2, 1, 1, 70]";
    "[3, 1, 0, 58]" -> "[2, 0, 1, 70]";
    "[3, 1, 0, 58]" -> "[1, 1, 1, 70]";
    "[1, 1, 1, 70]" -> "[2, 1, 0, 88]";
    "[1, 1, 1, 70]" -> "[1, 2, 0, 88]";
    "[1, 1, 1, 70]" -> "[2, 2, 0, 88]";
    "[1, 1, 1, 70]" -> "[1, 3, 0, 88]";
    "[3, 0, 1, 8]" -> "[3, 1, 0, 16]";
    "[3, 1, 0, 16]" -> "[2, 1, 1, 21]";
    "[3, 1, 0, 16]" -> "[2, 0, 1, 21]";
    "[3, 1, 0, 16]" -> "[1, 1, 1, 21]";
    "[1, 1, 1, 21]" -> "[2, 1, 0, 35]";
    "[1, 1, 1, 21]" -> "[1, 2, 0, 35]";
    "[1, 1, 1, 21]" -> "[2, 2, 0, 35]";
    "[1, 1, 1, 21]" -> "[1, 3, 0, 35]";
    "[2, 2, 0, 35]" -> "[1, 2, 1, 45]";
    "[2, 2, 0, 35]" -> "[2, 1, 1, 45]";
    "[2, 2, 0, 35]" -> "[0, 2, 1, 45]";
    "[2, 2, 0, 35]" -> "[2, 0, 1, 45]";
    "[0, 2, 1, 45]" -> "[1, 2, 0, 61]";
    "[0, 2, 1, 45]" -> "[0, 3, 0, 61]";
    "[0, 2, 1, 45]" -> "[1, 3, 0, 61]";
    "[0, 3, 0, 61]" -> "[0, 1, 1, 72]";
    "[0, 1, 1, 72]" -> "[1, 1, 0, 89]";
    "[0, 1, 1, 72]" -> "[0, 2, 0, 89]";
    "[0, 1, 1, 72]" -> "[1, 2, 0, 89]";
    "[0, 1, 1, 72]" -> "[2, 1, 0, 89]";
}
